#!/bin/bash
############################  SETUP PARAMETERS
debug_mode=0

############################  BUNDLES LIST
history_substring_search="bundle/zsh-history-substring-search --squash https://github.com/zsh-users/zsh-history-substring-search.git master"
zsh_syntax_highlighting="bundle/zsh-syntax-highlighting --squash https://github.com/zsh-users/zsh-syntax-highlighting.git master"
zsh_base16="bundle/zsh-base16 --squash git@github.com:X4/zsh-base16.git master"


############################  BASIC SETUP TOOLS
msg() {
    printf '%b' "$1" >&2
}

error() {
    msg "\e[31m[✘]\033[0m ${1}${2}"
    exit 1
}

success() {
    if [ "$ret" -eq '0' ]; then
      msg "\e[32m[✔]\033[0m ${1}${2}"
    else
      error "${1}${2}"
    fi
}

debug() {
    if [ "$debug_mode" -eq '1' ] && [ "$ret" -gt '1' ]; then
      msg "An error occured in function \"${FUNCNAME[$i+1]}\" on line ${BASH_LINENO[$i+1]}, we're sorry for that."
    fi
}

program_exists() {
    local ret='0'
    type $1 >/dev/null 2>&1 || { local ret='1'; }

    # throw error on non-zero return value
    if [ ! "$ret" -eq '0' ]; then
    error "$2"
    fi
}

############################  SETUP ROUTINE

git_subtrees() {
    cd ~/.X4
    git subtree add  --prefix $1
    git subtree pull --prefix $1
    ret="$?"
    success "$2"
}

setup_shell() {
    msg "\n\n\e[36mWhich shell do you want to setup?\033[0m]\n[\e[31m1\033[0m] ZSH\t [\e[31m2\033[0m] Bash\t [\e[31m3\033[0m] Fish\nChoose: "
    read -p "" X4 ; echo ""

    if [[ $X4 =~ ^[1]$ ]]; then
	chosen_one=$(which zsh)
        ln -sfv $HOME/.X4/.zsh* $HOME/
    fi

    if [[ $X4 =~ ^[2]$ ]]; then
	chosen_one=$(which bash)
        ln -sfv $HOME/.X4/.bash* $HOME/
    fi

    if [[ $X4 =~ ^[3]$ ]]; then
	chosen_one=$(which fish)
        ln -sfv $HOME/.X4/.fish* $HOME/
    fi

    if [[ ! $X4 -eq "" ]]; then
	# Enable custom bc functions
        ln -sfv $HOME/.X4/.bcrc $HOME/

	# Install VCS defaults
        ln -sfv $HOME/.X4/.cvsignore $HOME/

	# Enable custom RoR toolset defaults
        ln -sfv $HOME/.X4/.gemrc $HOME/
        ln -sfv $HOME/.X4/.irbrc $HOME/

	# Enable custom keybindings
        ln -sfv $HOME/.X4/.inputrc $HOME/

	# Enable custom tmux defaults
        ln -sfv $HOME/.X4/.tmux* $HOME/

	# Install ksshaskpass script
        ln -sfv $HOME/.X4/script.d/ssh-add.sh $HOME/.kde4/Autostart/

        # Install Konsole themes
	mkdir -p `kde4-config --localprefix`/share/apps/konsole/
	cp -fv $HOME/.X4/konsole/* `kde4-config --localprefix`/share/apps/konsole/
    fi
    ret="$?"
    success "$1"

    if [[ $X4 =~ ^[1]$ ]]; then
	msg "\n\e[36mDo you want to make $chosen_one your default shell now?\033[0m\n[\e[31m1\033[0m] yes\t\t[\e[31m0\033[0m] no \nChoose: "
	read

        chsh -s $chosen_one
    fi

    ret="$?"
    success "$2\n"

}

function setup_subtrees {
    msg "\n\e[36mDo you want to add the bundle git subtrees now?\033[0m\n[\e[31m1\033[0m] yes\t\t[\e[31m0\033[0m] no \nChoose: "

    read;
    if [[ $REPLY =~ ^[1]$ ]]; then
	git_subtrees $history_substring_search	"installing bundle/zsh-history-substring-search ...\n"
	git_subtrees $zsh_syntax_highlighting	"installing bundle/zsh-syntax-highlighting ...\n"
	git_subtrees $zsh_base16		"installing bundle/zsh-base16 ...\n"
    fi

    ret="$?"
    success "$2\n"
}

############################  MAIN()
msg			"Welcome!\n" && sleep 1
msg			"Do you want to play a game?\n" && sleep 1

setup_shell 		"Successfully installed chosen dotfile symlinks ...\n"\
	 		"Successfully set default shell to $chosen_one ...\n"

setup_subtrees		"Successfully installed all bundle subtrees ...\n"

success			"Thank you master commander!"
